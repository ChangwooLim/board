g <- data %>%
ggplot(aes(x = "X", y = "Y")) +
geom_point() +
xlab(xlabel) +
ylab(ylabel)
return(g)
}
relation(var1, var2)
head(data)
data %>%
ggplot(aes(x = "X", y = "Y")) +
geom_point()
data %>% ggplot(aes(x = X, y = Y)) + geom_point()
#' @import ggplot2
#' @import magrittr
#' @importFrom tibble is_tibble
#' @export
#'
relation <- function(var1, var2, xlabel = NULL, ylabel = NULL){
data <- data.frame(cbind(var1, var2))
colnames(data) <- c("X", "Y")
if(is_tibble(var1)){
xlabel = ifelse(is.null(xlabel), names(var1), xlabel)
}
if(is_tibble(var2)){
ylabel = ifelse(is.null(ylabel), names(var2), ylabel)
}
xlabel = ifelse(is.null(xlabel), "X", xlabel)
ylabel = ifelse(is.null(ylabel), "Y", ylabel)
g <- data %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
xlab(xlabel) +
ylab(ylabel)
return(g)
}
relation(var1, var2)
library(board)
board::relation(inputData[,'HGHT'], inputData[,'WGHT'])
print(board::relation(inputData[,'HGHT'], inputData[,'WGHT']))
ggpie(mtcars[,1])
head(mtcars)
ggpit(mtcars[,2])
ggpie(mtcars[,2])
ggpie(mtcars[,1])
i <- mtcars[,1]
i <- as.data.frame(table(i))
colnames(i) <- c('variable', 'value')
i
sort(i)
sort(i[,2])
i[order(i$value),]
i[order(i$value,decreasing = TRUE),]
i <- i[order(i$value,decreasing = TRUE), ]
i
c('Etc', colSums(i[7:nrow,]))
colSums(i[7:nrow,])
colSums(i[7:nrow(i),])
nrow(i)
i[7:nrow(i),]
colSums(i[7:nrow(i), 2])
i[7:nrow(i), 2]
c('Etc', sum(i[7:nrow(i), 2]))
i[7,] <- c('Etc', sum(i[7:nrow(i), 2]))
i[7,] <- c('Etc', sum(i[7:nrow(i), 2]))
i
summary(i)
i[,1]
i[,1] <- as.character(i[,1])
i <- mtcars[,1]
i <- as.data.frame(table(i))
i[,1] <- as.character(i[,1])
colnames(i) <- c('variable', 'value')
i
i <- i[order(i$value,decreasing = TRUE), ]
i[7,] <- c('Etc', sum(i[7:nrow(i), 2]))
i <- i[1:7,]
i
i[,1] <- as.factor(i[,1])
i[,2] <- round( 100*i[,2]/sum(i[,2]) )
i
i[,2]
i[,2] <- as.numeric(i[,2])
i[,2] <- round( 100*i[,2]/sum(i[,2]) )
i
ggplot(i, aes(x="", y = value, fill = variable)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme(
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold"),
legend.position = "bottom"
) +
geom_text(
aes(
label = scales::percent(value/100)
),
size = 5,
position = position_stack(vjust = 0.5)
) +
ggtitle('most distribution')
ggplot(i, aes(x="", y = value, fill = variable)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme(
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold"),
legend.position = "bottom"
) +
geom_text(
aes(
label = scales::percent(value/100)
),
size = 4,
position = position_stack(vjust = 0.5)
) +
ggtitle('most distribution')
ggplot(i, aes(x="", y = value, fill = variable)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme(
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold"),
legend.position = "bottom"
) +
geom_text(
aes(
label = scales::percent(value/100)
),
size = 4,
position = position_stack(vjust = 0.6)
) +
ggtitle('most distribution')
ggplot(i, aes(x="", y = value, fill = variable)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
theme(
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold"),
legend.position = "bottom"
) +
geom_text(
aes(
label = scales::percent(value/100)
),
size = 4,
position = position_stack(vjust = 0.5, hjust = 1.2)
) +
ggtitle('most distribution')
?position_stack()
library(board)
ggpie(mtcars[,1])
ggpie(mtcars[,2])
ggpie(mtcars[,3])
gc()
mtcars
dominate(mtcars[,2])
distribute(mtcars[,1])
distribute(mtcars[,1], NULL)
distribute(mtcars[,2], NULL)
distribute(mtcars[,3], NULL)
mtcars[,1]
library(board)
describe(mtcars[,1])
inputData[,1]
distribute(inputData[,1])
inputData[,1]
names(inputData[,1])
inputData[,1] %>% data.frame()
i
i <- inputData[,1]
is_tibble(i)
name <- names(i)
i <- data.frame(i)
i
head(i)
colnames(i) = 'X'
head(i)
i %>% ggplot(aes(x = "X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')+
xlab(name)
i %>% ggplot(aes(x = "X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')
i
distribute(mtcars[,1])
mtcars[1]
mtcars[,1]
head(inputData[,1])
distribute(c(1,1,2,2,2,3,3,3,3,4,4,4,4,4,4,1,1,2,2,))
distribute(c(1,1,2,2,2,3,3,3,3,4,4,4,4,4,4,1,1,2,2))
i
head(i)
i %>% ggplot(aes(x = "X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')
distribute
head(i)
nrow(i)
dim(i)
i %>% ggplot(aes(x = "X")) +
geom_histogram(colour = 'black', fill = '#48dbfb', stat = 'identity')+
xlab(name)
i %>% ggplot(aes(x = "X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')
?geom_histogram
i %>% ggplot(aes("X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')
diamonds
distribute(diamonds[,1])
diamonds[,1]
summary(diamonds[,1])
i <- diamonds[,1]
is_tibble(i)
i %>% ggplot(aes(carat)) + geom_histogram()
i %>% ggplot(aes(carat)) + geom_histogram(fill = '#48dbfb')
i %>% ggplot(aes(carat)) + geom_histogram(fill = '#48dbfb', colour = 'black')
names(i)
i
names(i) <- "X"
i
i %>% ggplot(aes("X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')+
i %>% ggplot(aes("X")) +
geom_histogram(colour = 'black', fill = '#48dbfb')
i %>% ggplot(aes(X)) +
geom_histogram(colour = 'black', fill = '#48dbfb')
library(board)
distribute(diamonds[,1])
distribute(diamonds[,2])
diamonds
i <- diamonds[,2]
i
summary(i)
is.factor(i)
i[,1]
i
as.data.frame(i)
names(c(1,1,2,2,2))
as.data.frame(i)
library(board)
distribute(diamonds[,1])
library(board)
distribute(diamonds[,1])
distribute(diamonds[,2])
diamonds[,2]
typeof(diamondsp,2)
typeof(diamonds[,2])
typeof(diamonds[,1])
class(diamondsp,1)
class(diamonds[,1])
class(diamonds[,2])
diamonds[,2]
summary(diamonds[,2])
summary(as.character(diamonds[,2]))
as.character(diamonds[,2])
diamonds[2]
diamonds[,2]
distribute(mtcarsp,1)
distribute(mtcars[,1])
library(board)
distribute(mtcars[,1])
distribute(mtcars[,2])
distribute(diamonds[,2])
distribute(diamonds[,1])
distribute(diamonds[,3])
distribute(diamonds[,4])
distribute(diamonds[,2])
distribute(diamonds[,5])
diamonds
diamonds[,2]$cut
diamonds[,2][[1]]
distribute(diamonds[,2][[1]])
is.factor(diamonds[,2])
as.data.frame(diamonds[,2])
distribute(as.data.frame(diamonds[,2]) )
i <- as.data.frame(diamonds[,2])
i
head(i)
names(i) <- "X"
i %>%
ggplot(aes(x = X)) +
geom_histogram(colour = 'black', fill = '#48dbfb')
head(i)
i %>% ggplot(aes(x = 'X'))
i %>% ggplot(aes(x = 'X')) + geom_histogram()
i %>% ggplot(aes(x = 'X')) + geom_bar(stat = 'count')
table(mtcars[,1])
table(diamonds[,1])
library(board)
distribute(diamonds[,1])
diamonds[,1] %>% ggplot(aes(x = caret)) + geom_histogram()
diamonds[,1] %>% ggplot(aes(x = 'caret')) + geom_histogram()
diamonds[.1]
diamonds[,1]
diamonds[,1] %>% ggplot(aes(x = 'carat')) + geom_histogram()
diamonds[,1] %>% ggplot(aes(x = carat)) + geom_histogram()
geom_bar(bins = 30)
distribute(diamonds[,1])
library(board)
distribute(diamonds[,1])
table(diamonds[,1])
as.data.frame(table(diamonds[,1]))
library(board)
distribute(mtcarsp,1)
distribute(mtcars[,1])
distribute(mtcars[,1])
library(board)
distribute(mtcars[,1])
library(board)
distribute(mtcars[,1])
distribute(mtcars[,1])
library(board)
distribute(mtcars[,2])
distribute(diamonds[,1]
)
distribute(diamonds[,1])
distribute(diamonds[,2])
diamonds[,1]
diamonds[,1] %>% ggplot(aes(x = carat)) + geom_histogram()
diamonds[,1] %>% ggplot(aes(x = carat)) + geom_histogram()i
i
i <- diamonds[,1]
i %>%
ggplot(aes(x = names(i))) +
geom_histogram(colour = 'black', fill = '#48dbfb')+
xlab(xlabel)
xlabel = NULL
i %>%
ggplot(aes(x = names(i))) +
geom_histogram(colour = 'black', fill = '#48dbfb')+
xlab(xlabel)
names(i)
i %>%
ggplot(aes(x = eval(parse(text = 'names(i)' )))) +
geom_histogram(colour = 'black', fill = '#48dbfb')
names(i)
i %>% ggplot(aes(x = carat)) + geom_histogram()
i %>%
ggplot(aes(x = eval(parse(text = 'names(i)' )))) +
geom_histogram(colour = 'black', fill = '#48dbfb')
i
i %>%
ggplot(aes(x = carat))) +
geom_histogram(colour = 'black', fill = '#48dbfb')
i %>%
ggplot(aes(x = carat)) +
geom_histogram(colour = 'black', fill = '#48dbfb')
i %>%
ggplot(aes(x = 'carat')) +
geom_histogram(colour = 'black', fill = '#48dbfb')
data.frame(x = mtcars[,1])
library(board)
distribute(mtcars[,1])
data.frame(X = mtcars[,1])
i <- data.frame(X = mtcars[,1])
i
i %>%
ggplot(aes(x = i)) +
geom_histogram(colour = 'black', fill = '#48dbfb')
as.data.frame(i)
as_tibble(mtcars[,1])
as_tibble(mtcars[,1]) %>% ggplot(aes(x = value)) + geom_histogram()
library(board)
distribute(mtcars[,1])
library(board)
distribute(mtcars[,1])
i <- as.tibble(mtcars[,1])
i <- as_tibble(mtcars[,1])
names(i) <- 'X'
i
library(board)
distribute(mtcars[,1])
distribute(mtcars[,2])
distribute(diamonds[,1])
distribute(diamonds[,2])
diamondes[,2]
diamonds[,2]
diamonds[,3]
diamonds[,5]
diamonds[,5][1]
diamonds[1,5]
diamonds[2,5]
diamonds[1,2]
is.numeric(diamonds[1,2])
is.numeric(diamonds[1,1])
i
i <- as_tibble(diamonds[,2])
i
as_factor(i)
as.factor(i)
i
geom_histogram(bins = 30)
library(board)
distribute(mtcars[,1])
distribute(diamonds[,1])
distribute(diamonds[,2])
diamonds[,2]
diamonds[,2][1]
is.numeric(diamonds[1,2] )
is.numeric(diamonds[1,1] )
diamonds[1,1]
is.numeric(diamonds[1,1])
diamonds[1,1]
class(diamonds[1,1])
diamonds::select(where(is.numeric))
diamonds %>% select(where(is.numeric))
diamonds
library(board)
distribute(diamonds[,1])
ggpie(diamonds[,1])
ggpie(diamonds[,2])
ggpie(diamonds[,3])
inputData <- readxl::read_xlsx('~/Downloads/example_g1e.xlsx')
head(inputData)
View(inputData)
inputData$LDL
summary(inputData$LDL)
dominate(mtcars[,1])
library(board)
dominate(mtcars[,1])
dominate(diamonds[,1])
diamonds
library(ggplot2)
dominate(diamonds[,1])
board::describe(mtcars[,1])
inputData[,'HGHT']
board::describe(inputData[,'HGHT'])
i <- inputData[,'HGHT']
i[which(!is.na(i))]
which(is.na(i))
which(!is.na(i))
i[which(!is.na(i))]
na.omit(i)
library(board)
describe(i)
i <- na.omit(i)
i
length(i)
if(is_tibble(i)){
count <- nrow(i)
}
else{
count <- length(i)
}
i
library(tibble)
if(is_tibble(i)){
count <- nrow(i)
}
else{
count <- length(i)
}
count
is_tibble(i)
count <- nrow(i)
count
m = mean(i)
m
mean(i, na.rm = TRUE)
i
mean(i)
i
unname(i)
unlist(i)
as.numeric(i)
library(dplyr)
pull(i)
if(is_tibble(i)){
i <- pull(i)
}
length(i)
count <- length(i)
m = mean(i)
s = sd(i)
qs <- quantile(i)
q0 <- qs[1] # min
q1 <- qs[2] # 25%
q2 <- qs[3] # median
q3 <- qs[4] # 75%
q4 <- qs[5] # max
list(count = count, m = m, s = s, q0 = q0, q1 = q1, q2 = q2, q3 = q3, q4 = q4)
library(board)
library(board)
round(1234.5678,3)
library(board)
outlier(mtcars[,1])
outlier(mtcars[,2])
outlier(mtcars[,3])
head(diamonds)
i <- inputData[,'HGHT']
outlier(i)
library(board)
outlier(i)
